var i=class{_value;to;speed;_alive=!0;paused=!1;constructor(e,t,o=1){this._value=e,this.to=t,this.speed=o}kill(){this._alive=!1}get value(){return this._value}get alive(){return this._alive}reset(e){this._value=e,this.to=e}smoothValue(e,t,o){return e+(t-e)*Math.max(0,Math.min(1,this.speed*o))}};var n=class extends i{onChange;constructor(e=[],t,o){super(e,e,t),this.onChange=o}update(e){let t=this._value.length;for(;t-- >0;)this._value[t]=this.smoothValue(this._value[t],this.to[t],e);this.onChange?.(this._value)}};var h=class extends i{onChange;constructor(e=0,t=1,o){super(e,e,t),this.onChange=o}update(e){this._value=this.smoothValue(this._value,this.to,e),this.onChange?.(this._value)}};var u=class{_zmooths=[];_lastTime=performance.now();_rafID=-1;autoUpdating=!1;constructor(e=!0){this.autoUpdating=e,e&&(this._rafID=requestAnimationFrame(this._autoUpdate.bind(this)))}_autoUpdate(){this._rafID=requestAnimationFrame(this._autoUpdate.bind(this));let e=performance.now(),t=(e-this._lastTime)/1e3;this._lastTime=e,this.update(t)}setAutoUpdate(e){this.autoUpdating=e,e?this._rafID<0&&(this._rafID=requestAnimationFrame(this._autoUpdate.bind(this))):(cancelAnimationFrame(this._rafID),this._rafID=-1)}update(e){let t=this._zmooths.length;for(;t-- >0;){let o=this._zmooths[t];o.paused||(o.alive?o.update(e):this._zmooths.splice(t,1))}}val(e,t,o){let r=Array.isArray(e)?new n(e,t,o):new h(e,t,o);return this._zmooths.push(r),r}prop(e,t,o,r){return this.val(e[t],o,m=>{e[t]=m,r?.(m)})}kill(e){e.kill()}killAll(){let e=this._zmooths.length-1;for(;e-- >0;)this._zmooths[e].kill();this._zmooths=[]}destroy(){this.killAll(),cancelAnimationFrame(this._rafID)}};var l=class extends i{onChange;fieldNames;constructor(e,t,o,r){super({...e},{...e},o),this.onChange=r,this.fieldNames=t||Object.keys(e)}update(e){for(let t of this.fieldNames)this._value[t]=this.smoothValue(this._value[t],this.to[t],e);this.onChange?.(this._value)}};var a=new u(!0),k={inst:s=>new u(s),val:a.val.bind(a),prop:a.prop.bind(a),killAll:a.killAll.bind(a),setAutoUpdate:s=>a.setAutoUpdate(s),update:s=>a.update(s)};export{n as ZmoothArray,h as ZmoothNumber,l as ZmoothObject,k as default};
