var s=class{_value;to;speed;_alive=!0;constructor(t,e,o=1){this._value=t,this.to=e,this.speed=o}kill(){this._alive=!1}get value(){return this._value}get alive(){return this._alive}smoothValue(t,e,o){return t+(e-t)*this.speed*o}};var l=class extends s{onChange;constructor(t=[],e,o){super(t,t,e),this.onChange=o}update(t){let e=this._value.length;for(;e-- >0;)this._value[e]=this.smoothValue(this._value[e],this.to[e],t);this.onChange?.(this._value)}};var h=class extends s{onChange;constructor(t=0,e=1,o){super(t,t,e),this.onChange=o}update(t){this._value=this.smoothValue(this._value,this.to,t),this.onChange?.(this._value)}};var n=class{zmooths=[];lastTime=performance.now();rafID=-1;constructor(t=!0){t&&(this.rafID=requestAnimationFrame(this.autoUpdate.bind(this)))}autoUpdate(){let t=performance.now(),e=(t-this.lastTime)/1e3;this.lastTime=t,this.update(e),this.rafID=requestAnimationFrame(this.autoUpdate.bind(this))}update(t){let e=this.zmooths.length;for(;e-- >0;){let o=this.zmooths[e];o.alive?o.update(t):this.zmooths.splice(e,1)}}val(t,e,o){let a=Array.isArray(t)?new l(t,e,o):new h(t,e,o);return this.zmooths.push(a),a}prop(t,e,o,a){return this.val(t[e],o,u=>{t[e]=u,a?.(u)})}kill(t){t.kill()}killAll(){let t=this.zmooths.length-1;for(;t-- >0;)this.zmooths[t].kill();this.zmooths=[]}destroy(){this.killAll(),cancelAnimationFrame(this.rafID)}};var i=new n(!0),g={inst:r=>new n(r),val:i.val.bind(i),prop:i.prop.bind(i),killAll:i.killAll.bind(i)};export{g as default};
